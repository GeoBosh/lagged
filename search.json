[{"path":"https://geobosh.github.io/lagged/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgi N. Boshnakov. Author, maintainer.","code":""},{"path":"https://geobosh.github.io/lagged/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boshnakov GN (2022). lagged: Classes Methods Lagged Objects. https://github.com/GeoBosh/lagged https://geobosh.github.io/lagged/.","code":"@Manual{,   title = {lagged: Classes and Methods for Lagged Objects},   author = {Georgi N. Boshnakov},   year = {2022},   note = {https://github.com/GeoBosh/lagged https://geobosh.github.io/lagged/}, }"},{"path":"https://geobosh.github.io/lagged/index.html","id":"installing-lagged","dir":"","previous_headings":"","what":"Classes and Methods for Lagged Objects","title":"Classes and Methods for Lagged Objects","text":"latest stable version CRAN. vignette shipping package gives illustrative examples. vignette(\"Guide_lagged\", package = \"lagged\"). can install development version lagged Github:","code":"install.packages(\"lagged\") library(devtools) install_github(\"GeoBosh/lagged\")"},{"path":"https://geobosh.github.io/lagged/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Classes and Methods for Lagged Objects","text":"package provides several classes methods indexing starting zero. Objects can created function Lagged(). returns suitable Lagged object class suitable argument: recognises also \"acf\" objects base R time series functions: maximal lag stored object can obtained maxLag(): length objects equal maxlag(object) + 1. Subsetting \"[\" drops laggedness returns vector, matrix, array, depending dimension object. Subsetting one index gives data requested lags: Values beyond maximal lag NA. Dimensions dropped extent length one (.e. drop = FALSE): drop dimensions, use “[[”: Arithmetic operations mathematical functions defined naturally lagged objects. shorter one extended NA’s length longer. Operations lagged base R objects defined, well. However, error operations objects whose dimensions match, unless base R object scalar, , generally, size x[[0] ].","code":"library(lagged) v_lagged <- Lagged(0:6)                           # 1d object m_lagged <- Lagged(matrix(1:12, nrow = 4))        # 2d object a_lagged <- Lagged(array(1:24, dim = c(4,3,2)))  # 3d object ap_lagged <- Lagged(acf(AirPassengers, plot = FALSE)) maxLag(v_lagged) maxLag(m_lagged) maxLag(a_lagged) length(v_lagged) length(m_lagged) length(a_lagged) tmp <- v_lagged[0:2] tmp <- m_lagged[0:2] tmp <- a_lagged[0:1] v_lagged[0] m_lagged[0] a_lagged[0] v_lagged[[0]] m_lagged[[0]] a_lagged[[0]]"},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class FlexibleLagged — FlexibleLagged-class","title":"Class FlexibleLagged — FlexibleLagged-class","text":"Class FlexibleLagged.","code":""},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class FlexibleLagged — FlexibleLagged-class","text":"Objects can created calls form new(\"FlexibleLagged\",   data, ...), see also convenience function Lagged, \"FlexibleLagged\" used mainly programming superclass classes need inherit \"Lagged\" classes. can represent objects subclass \"Lagged\". Methods defined, internal representation transparent.","code":""},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class FlexibleLagged — FlexibleLagged-class","text":"data: Object class \"Lagged\" ~~","code":""},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class FlexibleLagged — FlexibleLagged-class","text":"Class \"Lagged\", directly.","code":""},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class FlexibleLagged — FlexibleLagged-class","text":"[ signature(x = \"FlexibleLagged\", = \"\"): ... [ signature(x = \"FlexibleLagged\", = \"missing\"): ... [<- signature(x = \"FlexibleLagged\", = \"missing\"): ... [<- signature(x = \"FlexibleLagged\", = \"numeric\"): ...","code":""},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class FlexibleLagged — FlexibleLagged-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/FlexibleLagged-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class FlexibleLagged — FlexibleLagged-class","text":"","code":"## Lagged1d v <- 1:12 v_lagged <- Lagged(v) v_lagged #> An object of class \"Lagged1d\" #> Slot *data*:  #>  Lag_0  Lag_1  Lag_2  Lag_3  Lag_4  Lag_5  Lag_6  Lag_7  Lag_8  Lag_9 Lag_10  #>      1      2      3      4      5      6      7      8      9     10     11  #> Lag_11  #>     12  identical(v_lagged, new(\"Lagged1d\", data = v)) # TRUE #> [1] TRUE v_lagged[0:2] # v[1:3] #> [1] 1 2 3 v_lagged[[0]] # 1 #> [1] 1  ## Lagged2d m <- matrix(1:12, nrow = 4) m_lagged <- Lagged(m) m_lagged #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 Lag_2 #>      1     5     9 #>      2     6    10 #>      3     7    11 #>      4     8    12 identical(m_lagged, new(\"Lagged2d\", data = m)) # TRUE #> [1] TRUE m_lagged[0] # matrix with 1  column #>      [,1] #> [1,]    1 #> [2,]    2 #> [3,]    3 #> [4,]    4 m_lagged[[0]] # numeric #> [1] 1 2 3 4  ## Lagged3d a <- array(1:24, dim = c(2, 3, 4)) a_lagged <- Lagged(a) identical(a_lagged, new(\"Lagged3d\", data = a)) # TRUE #> [1] TRUE  dim(a_lagged[0]) # c(2,3,1) #> [1] 2 3 1 a_lagged[0] #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 #>  a[ , , 1, drop = FALSE] #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 #>   dim(a_lagged[[0]]) # c(2,3) #> [1] 2 3 a_lagged[[0]] #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 a[ , , 1, drop = TRUE] #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6  ## as above \"FlexibleLagged\" ## 1d v_flex <- new(\"FlexibleLagged\", data = v) identical(v_flex@data, v_lagged) # TRUE #> [1] TRUE v_flex[0]   # = v_lagged[0] #> [1] 1 v_flex[[0]] # = v_lagged[[0]] #> [1] 1  ## 2d m_flex <- new(\"FlexibleLagged\", data = m) identical(m_flex@data, m_lagged) # TRUE #> [1] TRUE m_flex[0]   # = m_lagged[0] #>      [,1] #> [1,]    1 #> [2,]    2 #> [3,]    3 #> [4,]    4 m_flex[[0]] # = m_lagged[[0]] #> [1] 1 2 3 4  ## 3d a_flex <- new(\"FlexibleLagged\", data = a) identical(a_flex@data, a_lagged) # TRUE #> [1] TRUE a_flex[0]   # = a_lagged[0] #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 #>  a_flex[[0]] # = a_lagged[[0]] #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6"},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Lagged — Lagged-class","title":"Class Lagged — Lagged-class","text":"Class Lagged.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class Lagged — Lagged-class","text":"class serves base class objects natural indexing starting zero. virtual class, objects can created . Arithmetic operations defined. return objects strictly core \"Lagged\" classes, even arguments classes inheriting core \"Lagged\" classes. course, classes specialised methods can defined keep class appropriate. example, sum two autocovariance functions autocovariance function, difference may valid one. arithmetic operations \"Lagged\" objects arguments made equal length filling NA's.  one operands \"Lagged\", recycling rule applied argument singleton.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class Lagged — Lagged-class","text":"data: Object class \"\". Subclasses       \"Lagged\" may restrict class slot.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Lagged — Lagged-class","text":"[ signature(x = \"Lagged\", = \"missing\", j = \"\", drop = \"\"):       case (.e., missing) [], returns       underlying data. equivalent using       x[1:maxLag(x)]. maxLag signature(object = \"Lagged\"):       Gives maximal lag object. [[ signature(x = \"Lagged\", = \"numeric\"): ... [[<- signature(x = \"Lagged\", = \"numeric\"): ... [<- signature(x = \"Lagged\", = \"missing\"): ... coerce signature(= \"Lagged\", = \"array\"): ... coerce signature(= \"Lagged\", = \"matrix\"): ... coerce signature(= \"Lagged\", = \"vector\"): ... Math signature(x = \"Lagged\"): ... Math2 signature(x = \"Lagged\"): ... maxLag<- signature(object = \"Lagged\"): ... Ops signature(e1 = \"FlexibleLagged\", e2 = \"Lagged\"): ... Ops signature(e1 = \"Lagged\", e2 = \"FlexibleLagged\"): ... Ops signature(e1 = \"Lagged\", e2 = \"Lagged\"): ... Ops signature(e1 = \"Lagged\", e2 = \"missing\"): ... Ops signature(e1 = \"Lagged\", e2 = \"vector\"): ... Ops signature(e1 = \"vector\", e2 = \"Lagged\"): ... Summary signature(x = \"Lagged\"): ...","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class Lagged — Lagged-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/Lagged-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Lagged — Lagged-class","text":"","code":"Lagged(1:12)                   # => Lagged1d #> An object of class \"Lagged1d\" #> Slot *data*:  #>  Lag_0  Lag_1  Lag_2  Lag_3  Lag_4  Lag_5  Lag_6  Lag_7  Lag_8  Lag_9 Lag_10  #>      1      2      3      4      5      6      7      8      9     10     11  #> Lag_11  #>     12  Lagged(matrix(1:12, ncol = 3)) # => Lagged2d #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 Lag_2 #>      1     5     9 #>      2     6    10 #>      3     7    11 #>      4     8    12 Lagged(array(1:24, dim = 2:4))  # => Lagged3d #> An object of class \"Lagged3d\" #> Slot *data*:  #> , , Lag_0 #>  #>        #>  1 3 5 #>  2 4 6 #>  #> , , Lag_1 #>  #>          #>  7  9 11 #>  8 10 12 #>  #> , , Lag_2 #>  #>           #>  13 15 17 #>  14 16 18 #>  #> , , Lag_3 #>  #>           #>  19 21 23 #>  20 22 24 #>   ## equivalently:        new(\"Lagged1d\", data = 1:12)                   # => Lagged1d #> An object of class \"Lagged1d\" #> Slot *data*:  #>  Lag_0  Lag_1  Lag_2  Lag_3  Lag_4  Lag_5  Lag_6  Lag_7  Lag_8  Lag_9 Lag_10  #>      1      2      3      4      5      6      7      8      9     10     11  #> Lag_11  #>     12  new(\"Lagged2d\", data = matrix(1:12, ncol = 3)) # => Lagged2d #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 Lag_2 #>      1     5     9 #>      2     6    10 #>      3     7    11 #>      4     8    12 new(\"Lagged3d\", data = array(1:24, dim = 2:4)) # => Lagged3d #> An object of class \"Lagged3d\" #> Slot *data*:  #> , , Lag_0 #>  #>        #>  1 3 5 #>  2 4 6 #>  #> , , Lag_1 #>  #>          #>  7  9 11 #>  8 10 12 #>  #> , , Lag_2 #>  #>           #>  13 15 17 #>  14 16 18 #>  #> , , Lag_3 #>  #>           #>  19 21 23 #>  20 22 24 #>"},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Lagged objects — Lagged","title":"Create Lagged objects — Lagged","text":"Create objects inheriting Lagged.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Lagged objects — Lagged","text":"","code":"Lagged(data, ...)"},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Lagged objects — Lagged","text":"data suitable data, see Details. ... arguments passed new().","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Lagged objects — Lagged","text":"Lagged creates object inheriting \"Lagged\".   exact class depends argument data.   easiest way create lagged objects. data vector, matrix 3D array, result   \"Lagged1d\", \"Lagged2d\" \"Lagged3d\", respectively.   data inherits \"Lagged\", result   \"FlexibleLagged\".","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Lagged objects — Lagged","text":"suitable \"Lagged\" object, described Details","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Lagged objects — Lagged","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Lagged objects — Lagged","text":"considering making Lagged generic.","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/Lagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Lagged objects — Lagged","text":"","code":"## adapted from examples for acf() ## acf of univariate ts acv1 <- acf(ldeaths, plot = FALSE) class(acv1) # \"acf\" #> [1] \"acf\" a1 <-  drop(acv1$acf)  class(a1) # numeric #> [1] \"numeric\"  la1 <- Lagged(a1) # 1d lagged object from 'numeric': Lagged(acv1)      # 1d lagged object from 'acf': #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>       Lag_18  #> -0.585558984   ## acf of multivariate ts acv2 <- acf(ts.union(mdeaths, fdeaths), plot = FALSE) class(acv2) # \"acf\" #> [1] \"acf\" a2 <-  acv2$acf class(a2) # 3d array #> [1] \"array\" dim(a2) #> [1] 16  2  2  la2a <- acf2Lagged(acv2) # explicitly convert 'acf' to lagged object Lagged(acv2)            # equivalently, just use Lagged() #> An object of class \"Lagged3d\" #> Slot *data*:  #> , , Lag_0 #>  #>                      #>  1.0000000 0.9762413 #>  0.9762413 1.0000000 #>  #> , , Lag_1 #>  #>                      #>  0.7570591 0.7356685 #>  0.7443093 0.7295201 #>  #> , , Lag_2 #>  #>                      #>  0.4020525 0.3642418 #>  0.4052006 0.3808750 #>  #> , , Lag_3 #>  #>                         #>  0.03783542 -0.01067572 #>  0.01975943 -0.01833805 #>  #> , , Lag_4 #>  #>                        #>  -0.3346538 -0.3829206 #>  -0.3494684 -0.3889098 #>  #> , , Lag_5 #>  #>                        #>  -0.5889291 -0.6223870 #>  -0.6040312 -0.6305605 #>  #> , , Lag_6 #>  #>                        #>  -0.6639578 -0.6885385 #>  -0.6778035 -0.6959545 #>  #> , , Lag_7 #>  #>                       #>  -0.5915389 -0.610584 #>  -0.6117935 -0.617580 #>  #> , , Lag_8 #>  #>                        #>  -0.3641284 -0.3833383 #>  -0.3816714 -0.3960179 #>  #> , , Lag_9 #>  #>                           #>  -0.002048197 -0.01811207 #>  -0.024534195 -0.03473011 #>  #> , , Lag_10 #>  #>                      #>  0.3959546 0.3919831 #>  0.3400054 0.3487681 #>  #> , , Lag_11 #>  #>                      #>  0.6502747 0.6565921 #>  0.6218958 0.6281912 #>  #> , , Lag_12 #>  #>                      #>  0.7171089 0.7213972 #>  0.7082063 0.7158608 #>  #> , , Lag_13 #>  #>                      #>  0.6375408 0.6391044 #>  0.6154271 0.6193603 #>  #> , , Lag_14 #>  #>                      #>  0.3732288 0.3613526 #>  0.3656260 0.3584216 #>  #> , , Lag_15 #>  #>                           #>  0.01393135 -3.385423e-03 #>  0.01505498 -3.603698e-05 #>  identical(la2a, Lagged(acv2)) # TRUE #> [1] TRUE  la2a[0]    # R_0,  indexing lagged object #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 #>  a2[1, , ]  # same, indexing array data from 'cf' object #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 acv2[0]    # same, indexing 'acf' object #>  #> Autocorrelations of series ‘ts.union(mdeaths, fdeaths)’, by lag #>  #> , , mdeaths #>  #>  mdeaths   fdeaths   #>  1.000 (0) 0.976 (0) #>  #> , , fdeaths #>  #>  mdeaths   fdeaths   #>  0.976 (0) 1.000 (0) #>   la2a[1]    # R_1 #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201 #>  a2[2, , ]  # same #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201 acv2[1/12] # transposed, see end of this example section as to why use 1/12 #>  #> Autocorrelations of series ‘ts.union(mdeaths, fdeaths)’, by lag #>  #> , , mdeaths #>  #>  mdeaths         fdeaths         #>  0.757 ( 0.0833) 0.744 (-0.0833) #>  #> , , fdeaths #>  #>  mdeaths         fdeaths         #>  0.736 ( 0.0833) 0.730 ( 0.0833) #>   la2a[2]    # R_1 #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.4020525 0.3642418 #> [2,] 0.4052006 0.3808750 #>  a2[3, , ]  # same #>           [,1]      [,2] #> [1,] 0.4020525 0.3642418 #> [2,] 0.4052006 0.3808750 acv2[2/12] # transposed, see end of this example section as to why use 1/12 #>  #> Autocorrelations of series ‘ts.union(mdeaths, fdeaths)’, by lag #>  #> , , mdeaths #>  #>  mdeaths        fdeaths        #>  0.402 ( 0.167) 0.405 (-0.167) #>  #> , , fdeaths #>  #>  mdeaths        fdeaths        #>  0.364 ( 0.167) 0.381 ( 0.167) #>   ## multiple lags la2a[0:1]        # native indexing with lagged object #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201 #>  a2[1:2, , ]      # different ordering #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.7570591 0.7443093 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.9762413 1.0000000 #> [2,] 0.7356685 0.7295201 #>  acv2$acf[1:2, ,] # also different ordering #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.7570591 0.7443093 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.9762413 1.0000000 #> [2,] 0.7356685 0.7295201 #>   ## '[' doesn't drop a dimension even when it is of length 1: la2a[0] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 #>  la2a[1] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201 #>   ## to get a singleton element, use '[[': la2a[[0]] #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 la2a[[1]] #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201  ## arithmetic and math operators -la1 #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #> -1.000000000 -0.755051141 -0.396956836 -0.019395714  0.355897989  0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #>  0.681383469  0.607909875  0.378212377  0.012975866 -0.383252644 -0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #> -0.723167071 -0.638001465 -0.371577811 -0.009467461  0.293699737  0.496742216  #>       Lag_18  #>  0.585558984  +la1 #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>       Lag_18  #> -0.585558984   2*la1 #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #>  2.00000000  1.51010228  0.79391367  0.03879143 -0.71179598 -1.21713275  #>       Lag_6       Lag_7       Lag_8       Lag_9      Lag_10      Lag_11  #> -1.36276694 -1.21581975 -0.75642475 -0.02595173  0.76650529  1.30041341  #>      Lag_12      Lag_13      Lag_14      Lag_15      Lag_16      Lag_17  #>  1.44633414  1.27600293  0.74315562  0.01893492 -0.58739947 -0.99348443  #>      Lag_18  #> -1.17111797  la1^2 #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #> 1.000000e+00 5.701022e-01 1.575747e-01 3.761937e-04 1.266634e-01 3.703530e-01  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> 4.642834e-01 3.695544e-01 1.430446e-01 1.683731e-04 1.468826e-01 4.227688e-01  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #> 5.229706e-01 4.070459e-01 1.380701e-01 8.963282e-05 8.625954e-02 2.467528e-01  #>       Lag_18  #> 3.428793e-01  la1 + la1^2 #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  2.000000000  1.325153365  0.554531566  0.019771908 -0.229234610 -0.238213342  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.217100037 -0.238355459 -0.235167775 -0.012807492  0.530135234  1.072975461  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  1.246137683  1.045047335  0.509647880  0.009557094 -0.207440201 -0.249989387  #>       Lag_18  #> -0.242679660   abs(la1) #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #> 1.000000000 0.755051141 0.396956836 0.019395714 0.355897989 0.608566374  #>       Lag_6       Lag_7       Lag_8       Lag_9      Lag_10      Lag_11  #> 0.681383469 0.607909875 0.378212377 0.012975866 0.383252644 0.650206704  #>      Lag_12      Lag_13      Lag_14      Lag_15      Lag_16      Lag_17  #> 0.723167071 0.638001465 0.371577811 0.009467461 0.293699737 0.496742216  #>      Lag_18  #> 0.585558984  sinpi(la1) #> An object of class \"Lagged1d\" #> Slot *data*:  #>         Lag_0         Lag_1         Lag_2         Lag_3         Lag_4  #>  3.487868e-16  6.957974e-01  9.480588e-01  6.089573e-02 -8.992651e-01  #>         Lag_5         Lag_6         Lag_7         Lag_8         Lag_9  #> -9.423969e-01 -8.419911e-01 -9.430847e-01 -9.276945e-01 -4.075359e-02  #>        Lag_10        Lag_11        Lag_12        Lag_13        Lag_14  #>  9.334896e-01  8.907115e-01  7.641331e-01  9.074825e-01  9.197119e-01  #>        Lag_15        Lag_16        Lag_17        Lag_18  #>  2.973852e-02 -7.972253e-01 -9.999476e-01 -9.640925e-01  sqrt(abs(la1)) #> An object of class \"Lagged1d\" #> Slot *data*:  #>      Lag_0      Lag_1      Lag_2      Lag_3      Lag_4      Lag_5      Lag_6  #> 1.00000000 0.86893679 0.63004511 0.13926850 0.59657186 0.78010664 0.82545955  #>      Lag_7      Lag_8      Lag_9     Lag_10     Lag_11     Lag_12     Lag_13  #> 0.77968575 0.61498974 0.11391166 0.61907402 0.80635396 0.85039230 0.79874994  #>     Lag_14     Lag_15     Lag_16     Lag_17     Lag_18  #> 0.60957183 0.09730088 0.54194071 0.70479942 0.76521826   ## Summary group max(la1) #> [1] 1 min(la1) #> [1] -0.6813835 range(la1) #> [1] -0.6813835  1.0000000 prod(la1) #> [1] -8.84397e-11 sum(la1) #> [1] 0.92613 any(la1 < 0) #> [1] TRUE all(la1 >= 0) #> [1] FALSE  ## Math2 group round(la1) #> An object of class \"Lagged1d\" #> Slot *data*:  #>  Lag_0  Lag_1  Lag_2  Lag_3  Lag_4  Lag_5  Lag_6  Lag_7  Lag_8  Lag_9 Lag_10  #>      1      1      0      0      0     -1     -1     -1      0      0      0  #> Lag_11 Lag_12 Lag_13 Lag_14 Lag_15 Lag_16 Lag_17 Lag_18  #>      1      1      1      0      0      0      0     -1  round(la1, 2) #> An object of class \"Lagged1d\" #> Slot *data*:  #>  Lag_0  Lag_1  Lag_2  Lag_3  Lag_4  Lag_5  Lag_6  Lag_7  Lag_8  Lag_9 Lag_10  #>   1.00   0.76   0.40   0.02  -0.36  -0.61  -0.68  -0.61  -0.38  -0.01   0.38  #> Lag_11 Lag_12 Lag_13 Lag_14 Lag_15 Lag_16 Lag_17 Lag_18  #>   0.65   0.72   0.64   0.37   0.01  -0.29  -0.50  -0.59  signif(la1) #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #>  1.00000000  0.75505100  0.39695700  0.01939570 -0.35589800 -0.60856600  #>       Lag_6       Lag_7       Lag_8       Lag_9      Lag_10      Lag_11  #> -0.68138300 -0.60791000 -0.37821200 -0.01297590  0.38325300  0.65020700  #>      Lag_12      Lag_13      Lag_14      Lag_15      Lag_16      Lag_17  #>  0.72316700  0.63800100  0.37157800  0.00946746 -0.29370000 -0.49674200  #>      Lag_18  #> -0.58555900  signif(la1, 4) #> An object of class \"Lagged1d\" #> Slot *data*:  #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #>  1.000000  0.755100  0.397000  0.019400 -0.355900 -0.608600 -0.681400 -0.607900  #>     Lag_8     Lag_9    Lag_10    Lag_11    Lag_12    Lag_13    Lag_14    Lag_15  #> -0.378200 -0.012980  0.383300  0.650200  0.723200  0.638000  0.371600  0.009467  #>    Lag_16    Lag_17    Lag_18  #> -0.293700 -0.496700 -0.585600   ## The remaining examples below are only relevant ## for users comparing to indexing of 'acf' ##  ## indexing in base R acf() is somewhat misterious, so an example with ## DIY computation of lag_1 autocovariance matrix n <- length(mdeaths) tmpcov <- sum((mdeaths - mean(mdeaths)) * (fdeaths - mean(fdeaths)) ) / n msd <- sqrt(sum((mdeaths - mean(mdeaths))^2)/n) fsd <- sqrt(sum((fdeaths - mean(fdeaths))^2)/n) tmpcov1 <- sum((mdeaths - mean(mdeaths))[2:n] *                (fdeaths - mean(fdeaths))[1:(n-1)] ) / n tmpcov1 / (msd * fsd) #> [1] 0.7356685  la2a[[1]][1,2] - tmpcov1 / (msd * fsd)  # only numerically different #> [1] 2.220446e-16 ## the raw acf in the 'acf' object is not surprising: la2a[[1]][1,2] == acv2$acf[2, 1, 2] # TRUE #> [1] TRUE ## ... but this probably is: acv2[1] #>  #> Autocorrelations of series ‘ts.union(mdeaths, fdeaths)’, by lag #>  #> , , mdeaths #>  #>  mdeaths    fdeaths    #>  0.717 ( 1) 0.708 (-1) #>  #> , , fdeaths #>  #>  mdeaths    fdeaths    #>  0.721 ( 1) 0.716 ( 1) #>  ## the ts here is monthly but has unit of lag 'year' ## so acv2[1] asks for lag 1 year = 12 months, thus acv2[1/12] #>  #> Autocorrelations of series ‘ts.union(mdeaths, fdeaths)’, by lag #>  #> , , mdeaths #>  #>  mdeaths         fdeaths         #>  0.757 ( 0.0833) 0.744 (-0.0833) #>  #> , , fdeaths #>  #>  mdeaths         fdeaths         #>  0.736 ( 0.0833) 0.730 ( 0.0833) #>  all( acv2$acf[13, , ] == drop(acv2[1]$acf) )    # TRUE #> [1] TRUE all( acv2$acf[2, , ]  == drop(acv2[1/12]$acf) ) # TRUE #> [1] TRUE all( la2a[[1]]        == drop(acv2[1/12]$acf) ) # TRUE #> [1] TRUE"},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Lagged1d — Lagged1d-class","title":"Class Lagged1d — Lagged1d-class","text":"Class Lagged1d.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class Lagged1d — Lagged1d-class","text":"Objects can created calls form Lagged(v)   new(\"Lagged1d\", data = v), v vector.   new(\"Lagged1d\", ...) also works.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class Lagged1d — Lagged1d-class","text":"data: Object class \"vector\".","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class Lagged1d — Lagged1d-class","text":"Class \"Lagged\", directly.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Lagged1d — Lagged1d-class","text":"[<- signature(x = \"Lagged1d\", = \"numeric\"): ... [ signature(x = \"Lagged1d\", = \"numeric\", j = \"\", drop = \"\"): ... show signature(object = \"Lagged1d\"): ... whichLagged signature(x = \"Lagged1d\", y = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class Lagged1d — Lagged1d-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/Lagged1d-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Lagged1d — Lagged1d-class","text":"","code":"v <- cos(2*pi*(0:10)/10) new(\"Lagged1d\", data = v) ## ok, but Lagged() is more convenient #> An object of class \"Lagged1d\" #> Slot *data*:  #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #>  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017 -0.309017  #>     Lag_8     Lag_9    Lag_10  #>  0.309017  0.809017  1.000000  x <- Lagged(v) class(x) # Lagged1d #> [1] \"Lagged1d\" #> attr(,\"package\") #> [1] \"lagged\" x #> An object of class \"Lagged1d\" #> Slot *data*:  #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #>  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017 -0.309017  #>     Lag_8     Lag_9    Lag_10  #>  0.309017  0.809017  1.000000  x[0] #> [1] 1 x[0:3] #> [1]  1.000000  0.809017  0.309017 -0.309017"},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Lagged2d — Lagged2d-class","title":"Class Lagged2d — Lagged2d-class","text":"Class Lagged2d.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class Lagged2d — Lagged2d-class","text":"Objects can created calls form Lagged(m)   new(\"Lagged2d\", data = m), m matrix.   new(\"Lagged2d\", ...) also works.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class Lagged2d — Lagged2d-class","text":"data: Object class \"matrix\" ~~","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class Lagged2d — Lagged2d-class","text":"Class \"Lagged\", directly.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Lagged2d — Lagged2d-class","text":"[ signature(x = \"Lagged2d\", = \"numeric\", j = \"missing\", drop = \"logical\"): ... [ signature(x = \"Lagged2d\", = \"numeric\", j = \"missing\", drop = \"missing\"): ... [<- signature(x = \"Lagged2d\", = \"numeric\"): ... show signature(object = \"Lagged2d\"): ... whichLagged signature(x = \"Lagged2d\", y = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class Lagged2d — Lagged2d-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/Lagged2d-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Lagged2d — Lagged2d-class","text":"","code":"powers <- Lagged(outer(1:6, 0:6, `^`)) powers[[0]] #> [1] 1 1 1 1 1 1 powers[[1]] #> [1] 1 2 3 4 5 6 powers[[2]] #> [1]  1  4  9 16 25 36"},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Lagged3d — Lagged3d-class","title":"Class Lagged3d — Lagged3d-class","text":"Class Lagged3d.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class Lagged3d — Lagged3d-class","text":"Objects can created calls form Lagged()   new(\"Lagged3d\", data = ), 3-d array.   new(\"Lagged3d\", ...) also works.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class Lagged3d — Lagged3d-class","text":"data: Object class \"array\" ~~","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class Lagged3d — Lagged3d-class","text":"Class \"Lagged\", directly.","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Lagged3d — Lagged3d-class","text":"[ signature(x = \"Lagged3d\", = \"numeric\", j = \"missing\", drop = \"logical\"): ... [ signature(x = \"Lagged3d\", = \"numeric\", j = \"missing\", drop = \"missing\"): ... [<- signature(x = \"Lagged3d\", = \"numeric\"): ... show signature(object = \"Lagged3d\"): ... whichLagged signature(x = \"Lagged3d\", y = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class Lagged3d — Lagged3d-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/Lagged3d-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Lagged3d — Lagged3d-class","text":"","code":"## see examples for class \"Lagged\""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ","title":"Convert ","text":"Convert \"acf\" objects \"Lagged\" objects.","code":""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ","text":"","code":"acf2Lagged(x)"},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ","text":"x object \"S3\" class \"acf\", typically obtained     acf() related functions.","code":""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ","text":"acf2Lagged() converts objects produced acf()   friends suitable \"Lagged\" objects. Partial autocorrelations obtained acf() contain   value lag zero. acf2Lagged() puts number 1 lag zero   univariate case matrix NA's multivariate case.","code":""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ","text":"object class \"Lagged1d\" (univariate case)   \"Lagged3d\" (multivariate case)","code":""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert ","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/acf2Lagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ","text":"","code":"## using examples from help(acf) lh_acf <- acf2Lagged(acf(lh))   lh_acf[0:5] #> [1]  1.0000000  0.5755245  0.1818182 -0.1447552 -0.1748252 -0.1496503 acf(lh, plot = FALSE)$acf[1 + 0:5] # same #> [1]  1.0000000  0.5755245  0.1818182 -0.1447552 -0.1748252 -0.1496503  acf(ts.union(mdeaths, fdeaths))$acf[15,,] #>           [,1]      [,2] #> [1,] 0.3732288 0.3613526 #> [2,] 0.3656260 0.3584216  deaths_mts <- ts.union(mdeaths, fdeaths) deaths_acf <- acf2Lagged(acf(deaths_mts))  base_acf <- acf(deaths_mts)  ## rho_14 deaths_acf[14] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.3732288 0.3613526 #> [2,] 0.3656260 0.3584216 #>  base_acf$acf[1 + 14, , ] # same #>           [,1]      [,2] #> [1,] 0.3732288 0.3613526 #> [2,] 0.3656260 0.3584216 ## this is different and maybe surprising to some: base_acf[14] #>  #> Autocorrelations of series ‘deaths_mts’, by lag #>  #> , , mdeaths #>  #>  mdeaths fdeaths #>  NA (NA) NA (NA) #>  #> , , fdeaths #>  #>  mdeaths fdeaths #>  NA (NA) NA (NA) #>  ## (see also examples in \\link{Lagged})"},{"path":"https://geobosh.github.io/lagged/reference/bracket-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for subsetting defined in package 'lagged' — [-methods","title":"Methods for subsetting defined in package 'lagged' — [-methods","text":"Methods subsetting  defined package 'lagged'.","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracket-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for subsetting defined in package 'lagged' — [-methods","text":"Subscripting \"Lagged\" objects always drops   Lagged-ness. missing, x[], returns underlying   data. equivalent using x[0:maxLag(x)]. Subscripting (one index) defined naturally. returns   suitably subscripted data slot (\"FlexibleLagged\"   data slot data slot).  indices larger maximal lag   values NA. Currently negative indices work similarly standard R indexing   negative indices used drop elements. However,   \\(k>0\\), using \\(-k\\) index drops element lag   \\(k-2\\), \\(k\\) (since subsetting done something like   x@data[+1]). implementation detail, may   changed relied upon. following methods \"[\" currently defined package   \"lagged\": signature(x = \"FlexibleLagged\", = \"missing\", j = \"\", drop = \"\")  signature(x = \"FlexibleLagged\", = \"numeric\", j = \"missing\",            drop = \"logical\")  signature(x = \"FlexibleLagged\", = \"numeric\", j = \"missing\",            drop = \"missing\")  signature(x = \"Lagged\", = \"missing\", j = \"\", drop = \"\")  signature(x = \"Lagged1d\", = \"numeric\", j = \"\", drop = \"\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"missing\",            drop = \"logical\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"missing\",            drop = \"missing\")  signature(x = \"Lagged3d\", = \"numeric\", j = \"missing\",            drop = \"logical\")  signature(x = \"Lagged3d\", = \"numeric\", j = \"missing\",            drop = \"missing\")  signature(x = \"slMatrix\", = \"\", j = \"\", drop = \"\")  signature(x = \"Lagged2d\", = \"\", j = \"\", drop = \"character\")  signature(x = \"Lagged2d\", = \"missing\", j = \"numeric\",            drop = \"missing\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"numeric\",            drop = \"missing\")  signature(x = \"FlexibleLagged\", = \"missing\", j = \"missing\",            drop = \"\")  signature(x = \"\", = \"\", j = \"\", drop = \"\")  signature(x = \"nonStructure\", = \"\", j = \"\", drop = \"\")  signature(x = \"Lagged2d\", = \"character\", j = \"missing\",            drop = \"logical\")  signature(x = \"Lagged2d\", = \"character\", j = \"missing\",            drop = \"missing\")  signature(x = \"Lagged2d\", = \"character\", j = \"character\",            drop = \"missing\")  signature(x = \"Lagged2d\", = \"missing\", j = \"character\",            drop = \"missing\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"character\",            drop = \"missing\")  signature(x = \"Lagged2d\", = \"character\", j = \"numeric\",            drop = \"missing\")","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketass-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for subset assignment — [<--methods","title":"Methods for subset assignment — [<--methods","text":"Methods subset assignment.","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketass-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for subset assignment — [<--methods","text":"signature(x = \"FlexibleLagged\", = \"missing\")  signature(x = \"FlexibleLagged\", = \"numeric\")  signature(x = \"Lagged1d\", = \"numeric\")  signature(x = \"Lagged\", = \"missing\")  signature(x = \"Lagged2d\", = \"numeric\")  signature(x = \"Lagged3d\", = \"numeric\")  signature(x = \"slMatrix\", = \"\")","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketbracket-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for '[[' in package 'lagged' — [[-methods","title":"Methods for '[[' in package 'lagged' — [[-methods","text":"Methods '[[' package 'lagged'.","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketbracket-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for '[[' in package 'lagged' — [[-methods","text":"Indexing \"[[\" returns value specified lag.   index single number. recommended way extract value single index. signature(x = \"FlexibleLagged\", = \"\", j = \"\")  signature(x = \"Lagged\", = \"numeric\", j = \"missing\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"logical\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"numeric\")  signature(x = \"slMatrix\", = \"numeric\", j = \"\")  signature(x = \"Lagged2d\", = \"missing\", j = \"numeric\")  signature(x = \"Lagged2d\", = \"numeric\", j = \"missing\")  signature(x = \"FlexibleLagged\", = \"missing\", j = \"numeric\")  signature(x = \"FlexibleLagged\", = \"numeric\", j = \"missing\")","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketbracket-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for '[[' in package 'lagged' — [[-methods","text":"","code":"## for 1d objects the difference of '[' and '[[' is not visible (acv1 <- acf2Lagged(acf(ldeaths, plot = FALSE))) #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>       Lag_18  #> -0.585558984  acv1[1] #> [1] 0.7550511 acv1[[1]] #> [1] 0.7550511  ## in higher dimenions it matters acv2 <- acf2Lagged(acf(ts.union(mdeaths, fdeaths), plot = FALSE)) acv2[0]   # array #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 #>  acv2[[0]] # matrix #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000  ## as in standard R conventions, '[' can select arbitrary number of elements acv2[0:1] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9762413 #> [2,] 0.9762413 1.0000000 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.7570591 0.7356685 #> [2,] 0.7443093 0.7295201 #>  ## ... while '[[' selects only one, so this is an error: if (FALSE) { acv2[[0:1]] }  ## Lagged2 m <- matrix(10:49, nrow = 4, byrow = TRUE) m_lagged <- Lagged(m) m_lagged #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 Lag_2 Lag_3 Lag_4 Lag_5 Lag_6 Lag_7 Lag_8 Lag_9 #>     10    11    12    13    14    15    16    17    18    19 #>     20    21    22    23    24    25    26    27    28    29 #>     30    31    32    33    34    35    36    37    38    39 #>     40    41    42    43    44    45    46    47    48    49  ## one index: lag m_lagged[0:1] #>      [,1] [,2] #> [1,]   10   11 #> [2,]   20   21 #> [3,]   30   31 #> [4,]   40   41 m_lagged[0]   # column vector #>      [,1] #> [1,]   10 #> [2,]   20 #> [3,]   30 #> [4,]   40 m_lagged[[0]] # numeric #> [1] 10 20 30 40 ## two indices: first is row, second is lag m_lagged[1 , 0]     # '[' doesn't drop dimensions #>      [,1] #> [1,]   10 m_lagged[1 , 0:3] #>      [,1] [,2] [,3] [,4] #> [1,]   10   11   12   13  m_lagged[[1 , 0]]   # '[[' does drop dimensions #> [1] 10 m_lagged[[1 , 0:3]] #> [1] 10 11 12 13 m_lagged[[1, TRUE]] # the whole first row, as numeric #>  [1] 10 11 12 13 14 15 16 17 18 19  m_lagged[1:2 , 0:3] # ok, a matrix #>      [,1] [,2] [,3] [,4] #> [1,]   10   11   12   13 #> [2,]   20   21   22   23 ## ... but the first arg. of '[[' must be of length one, ## so this throws error: if (FALSE) { m_lagged[[1:2 , 0:3]] }"},{"path":"https://geobosh.github.io/lagged/reference/bracketbracketass-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for '[[<-' in package 'lagged' — [[<--methods","title":"Methods for '[[<-' in package 'lagged' — [[<--methods","text":"Methods '[[<-' package 'lagged'.","code":""},{"path":"https://geobosh.github.io/lagged/reference/bracketbracketass-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for '[[<-' in package 'lagged' — [[<--methods","text":"signature(x = \"Lagged\", = \"numeric\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged data with named lag dimension — dataWithLagNames","title":"Lagged data with named lag dimension — dataWithLagNames","text":"Get data Lagged object ensure lag dimension   named","code":""},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged data with named lag dimension — dataWithLagNames","text":"","code":"dataWithLagNames(object, prefix = \"Lag_\")"},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged data with named lag dimension — dataWithLagNames","text":"object object inheriting \"Lagged\". prefix character string.","code":""},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lagged data with named lag dimension — dataWithLagNames","text":"dataWithLagNames() extracts data part lagged object   gives names lag dimension, already named. function mainly used programming, particularly   show() methods lagged objects..","code":""},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged data with named lag dimension — dataWithLagNames","text":"data part names described Details.","code":""},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lagged data with named lag dimension — dataWithLagNames","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/dataWithLagNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagged data with named lag dimension — dataWithLagNames","text":"","code":"x <- Lagged(drop(acf(ldeaths, plot = FALSE)$acf)) ## there are no names for the lags: names(x) # NULL #> NULL ## but the print method inserts default \"Lag_N\" names x #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>       Lag_18  #> -0.585558984  ## This sets the names to their defaults: x1 <- dataWithLagNames(x) names(x1) #>  [1] \"Lag_0\"  \"Lag_1\"  \"Lag_2\"  \"Lag_3\"  \"Lag_4\"  \"Lag_5\"  \"Lag_6\"  \"Lag_7\"  #>  [9] \"Lag_8\"  \"Lag_9\"  \"Lag_10\" \"Lag_11\" \"Lag_12\" \"Lag_13\" \"Lag_14\" \"Lag_15\" #> [17] \"Lag_16\" \"Lag_17\" \"Lag_18\" ## ... and this sets non-default prefix: x2 <- dataWithLagNames(x, \"L\") names(x2) #>  [1] \"L0\"  \"L1\"  \"L2\"  \"L3\"  \"L4\"  \"L5\"  \"L6\"  \"L7\"  \"L8\"  \"L9\"  \"L10\" \"L11\" #> [13] \"L12\" \"L13\" \"L14\" \"L15\" \"L16\" \"L17\" \"L18\" x2 #>           L0           L1           L2           L3           L4           L5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>           L6           L7           L8           L9          L10          L11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>          L12          L13          L14          L15          L16          L17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>          L18  #> -0.585558984"},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"Provides various ways filling matrix object values   according conventions class slMatrix. generic   function. methods values given matrix computed   function. arguments function indices   matrix may follow variety conventions.","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"","code":"fill.slMatrix(m, f, period, maxlag, type)"},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"m matrix filled values f function whose evaluation produces entries m period number seasons cycle maxlag maximal lag type indexing convention - \"sl\" (default) stands     standard season-lag pair, \"tt\" time-time pair, \"tl\"     time-lag pair, see ... details.","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"internal representation autocovariances quantities   related periodic correlation matrix one row   season. Methods generic provide way convert external   structures format. slMatrix calls fill.slMatrix called   appropriate argument f. todo: need better explanation !","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"matrix filled values required","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"signature(m = \"\", f = \"\") Issue error message stop. default behaviour allow   filling values unknown objects. signature(m = \"matrix\", f = \"function\") Fill values evaluating function.  arguments   function may \"sl\", \"tt\" \"tl\" format. signature(m = \"matrix\", f = \"matrix\") Fill values slMatrix object matrix. entries may   arranged \"sl\", \"tt\" \"tl\" format.","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"Boshnakov GN Iqelan BM (2009). ``Generation time series models given spectral properties.'' J. Time Series Anal., 30(3), pp. 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x . Boshnakov GN Lambert-Lacroix S (2012). ``periodic Levinson-Durbin algorithm entropy maximization.'' Computational Statistics \\& Data Analysis, 56, pp. 15--24. ISSN 0167-9473, doi: 10.1016/j.csda.2011.07.001 , https://www.sciencedirect.com/science/article/pii/S0167947311002556.","code":""},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/fill.slMatrix-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for Function fill.slMatrix in Package `sarima' — fill.slMatrix-methods","text":"","code":"# :todo:"},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":null,"dir":"Reference","previous_headings":"","what":"Give the maximal lag in an object — maxLag","title":"Give the maximal lag in an object — maxLag","text":"Give maximal lag object, autocorrelations.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give the maximal lag in an object — maxLag","text":"","code":"maxLag(object, ...)"},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give the maximal lag in an object — maxLag","text":"object object, function makes sense. ... used?","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give the maximal lag in an object — maxLag","text":"maxLag generic function get maximal lag   information available lagged objects.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give the maximal lag in an object — maxLag","text":"non-negative integer","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Give the maximal lag in an object — maxLag","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Give the maximal lag in an object — maxLag","text":"signature(object = \"Lagged\") method applies classes inheriting \"Lagged\". signature(object = \"array\")  signature(object = \"matrix\")  signature(object = \"vector\")  signature(object = \"\")  signature(object = \"slMatrix\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/maxLag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Give the maximal lag in an object — maxLag","text":"","code":"## 1d v <- Lagged(2^(0:6)) v #> An object of class \"Lagged1d\" #> Slot *data*:  #> Lag_0 Lag_1 Lag_2 Lag_3 Lag_4 Lag_5 Lag_6  #>     1     2     4     8    16    32    64  maxLag(v) #> [1] 6 v[c(2,4,6)] #> [1]  4 16 64 v[8] # NA #> [1] NA ## reduce the number of lags in place maxLag(v) <- 4 v #> An object of class \"Lagged1d\" #> Slot *data*:  #> Lag_0 Lag_1 Lag_2 Lag_3 Lag_4  #>     1     2     4     8    16  ## extend the object (with NA's) maxLag(v) <- 6 v #> An object of class \"Lagged1d\" #> Slot *data*:  #> Lag_0 Lag_1 Lag_2 Lag_3 Lag_4 Lag_5 Lag_6  #>     1     2     4     8    16    NA    NA  ## extend using \"[\" v[5:8] <- 2^(5:8) v #> An object of class \"Lagged1d\" #> Slot *data*:  #> Lag_0 Lag_1 Lag_2 Lag_3 Lag_4 Lag_5 Lag_6 Lag_7 Lag_8  #>     1     2     4     8    16    32    64   128   256   ## 2d m <- Lagged(matrix(1:12, nrow = 4)) m #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 Lag_2 #>      1     5     9 #>      2     6    10 #>      3     7    11 #>      4     8    12 maxLag(m) #> [1] 2 maxLag(m) <- 1 m #> An object of class \"Lagged2d\" #> Slot *data*:  #>  Lag_0 Lag_1 #>      1     5 #>      2     6 #>      3     7 #>      4     8 ## maxLag(m) <- 4 # extending this way doesn't work currently"},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the maximal lag in a lagged object — maxLag<-","title":"Change the maximal lag in a lagged object — maxLag<-","text":"Change maximal lag lagged object.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the maximal lag in a lagged object — maxLag<-","text":"","code":"maxLag(object, ...) <- value"},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the maximal lag in a lagged object — maxLag<-","text":"object object makes sense. ... currently used. value new value maximal lag, non-negative integer number.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the maximal lag in a lagged object — maxLag<-","text":"replacement version maxLag() changes maximal lag   object value. generic function default   method. core Lagged classes done simply extending   shrinking data part requested value. Subclasses   \"Lagged\" classes, general, may need elaborate   changes. , define methods. value larger current maxLag(object),   entries new lags filled NA's.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the maximal lag in a lagged object — maxLag<-","text":"object whose maximal lag modified described Details.","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Change the maximal lag in a lagged object — maxLag<-","text":"signature(object = \"Lagged\")  signature(object = \"FlexibleLagged\")","code":""},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change the maximal lag in a lagged object — maxLag<-","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/maxLagass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the maximal lag in a lagged object — maxLag<-","text":"","code":"la1 <- Lagged(drop(acf(ldeaths)$acf))  la3 <- la1 la3 #> An object of class \"Lagged1d\" #> Slot *data*:  #>        Lag_0        Lag_1        Lag_2        Lag_3        Lag_4        Lag_5  #>  1.000000000  0.755051141  0.396956836  0.019395714 -0.355897989 -0.608566374  #>        Lag_6        Lag_7        Lag_8        Lag_9       Lag_10       Lag_11  #> -0.681383469 -0.607909875 -0.378212377 -0.012975866  0.383252644  0.650206704  #>       Lag_12       Lag_13       Lag_14       Lag_15       Lag_16       Lag_17  #>  0.723167071  0.638001465  0.371577811  0.009467461 -0.293699737 -0.496742216  #>       Lag_18  #> -0.585558984  ## shrink la3 maxLag(la3) # 18 #> [1] 18 maxLag(la3) <- 5 la3 #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #>  1.00000000  0.75505114  0.39695684  0.01939571 -0.35589799 -0.60856637  maxLag(la3) # 5 #> [1] 5  ## extend la3, new entries are filled with NA's maxLag(la3) <- 10 la3 #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #>  1.00000000  0.75505114  0.39695684  0.01939571 -0.35589799 -0.60856637  #>       Lag_6       Lag_7       Lag_8       Lag_9      Lag_10  #>          NA          NA          NA          NA          NA   ## alternatively, use \"[<-\" which accepts any replacement values la3[11:13] <- 0 la3 #> An object of class \"Lagged1d\" #> Slot *data*:  #>       Lag_0       Lag_1       Lag_2       Lag_3       Lag_4       Lag_5  #>  1.00000000  0.75505114  0.39695684  0.01939571 -0.35589799 -0.60856637  #>       Lag_6       Lag_7       Lag_8       Lag_9      Lag_10      Lag_11  #>          NA          NA          NA          NA          NA  0.00000000  #>      Lag_12      Lag_13  #>  0.00000000  0.00000000"},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of seasons from an object — nSeasons","title":"Get the number of seasons from an object — nSeasons","text":"Get number seasons object.","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of seasons from an object — nSeasons","text":"","code":"nSeasons(object) nSeasons(object, ...) <- value"},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of seasons from an object — nSeasons","text":"object object notion number seasons makes sense. value positive integer number. ... arguments methods.","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the number of seasons from an object — nSeasons","text":"generic functions. Methods nSeasons straightforward property   makes sense objects class. contrast, methods   replacement version, `nSeasons<-`, defined carefully   may even feasible.","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of seasons from an object — nSeasons","text":"integer number","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the number of seasons from an object — nSeasons","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Get the number of seasons from an object — nSeasons","text":"methods `nSeasons<-` defined package   lagged. methods defined nSeasons given .  signature(object = \"slMatrix\")","code":""},{"path":"https://geobosh.github.io/lagged/reference/nSeasons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of seasons from an object — nSeasons","text":"","code":"m <- slMatrix(matrix(1:12, nrow = 4)) m #> An object of class \"slMatrix\" #> Slot \"m\": #>       lag #> season 0 1  2 #>      1 1 5  9 #>      2 2 6 10 #>      3 3 7 11 #>      4 4 8 12 #>  nSeasons(m) #> [1] 4"},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal function — pc.omitneg","title":"An internal function — pc.omitneg","text":"internal function","code":""},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An internal function — pc.omitneg","text":"","code":"pc.omitneg(lags, maxlag)"},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An internal function — pc.omitneg","text":"lags todo: describe! maxlag todo: describe!","code":""},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An internal function — pc.omitneg","text":"pc.omitneg helps implement dropping negative indices  season-lag objects. returns first argument, lags,  elements non-negative. Otherwise, elements  lags must non-positive. case function creates  vector 0:maxlag drops elements specified lags.  Note  default indexing work properly since zero elements  index omitted (indices season-lag  objects).","code":""},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An internal function — pc.omitneg","text":"pc.omitneg, vector lags (non-negative integers).","code":""},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An internal function — pc.omitneg","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/pc.omitneg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An internal function — pc.omitneg","text":"","code":"# ttmatToslPairs # pc.omitneg lagged:::pc.omitneg(0:5,10) # 0:5, unchagend since all values >= 0 #> [1] 0 1 2 3 4 5  lagged:::pc.omitneg(-(0:5),10) # 6:10, works like #> [1]  6  7  8  9 10 (0:10)[-(0:5 +1)]     # same #> [1]  6  7  8  9 10  # don't mix positive and negative numbers in pc.omitneg if (FALSE) lagged:::pc.omitneg(c(0,2,3,-4,5), 10)"},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between vector and season lag representations — sl2acfbase","title":"Convert between vector and season lag representations — sl2acfbase","text":"Convert vector season-lag representations   autocovariances multivariate periodically correlated time   series.","code":""},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between vector and season lag representations — sl2acfbase","text":"","code":"sl2acfbase(mat, maxlag, fullblocks = FALSE)  acfbase2sl(acf)  sl2vecacf(mat, maxlag, fullblocks = FALSE)"},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between vector and season lag representations — sl2acfbase","text":"acf acf returned base R acf. mat matrix containing autocovariances season-lag arrangement. maxlag maximal lag, positive integer. fullblocks TRUE, keep full blocks .","code":""},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert between vector and season lag representations — sl2acfbase","text":"functions rearrange autocovariances autocorrelations   native season-lag arrangement package ``pcts'' vector   representations corresponding mutivariate models (vector   seasons representation periodic models). Variable \\(s\\) taken   season \\(s\\) vice versa opposite direction. ``acfbase'' names functions refers representation   returned base function acf. acfbase2sl rearranges multivariate acf season-lag form. sl2acfbase rearranges season-lag form multivariate   form used base function acf. sl2vecacf similar sl2acfbase result   lag third dimension r[ , , k]   \\(Cov(X_{t}, X_{t-k})\\) (transpose). See also examples   acf2Lagged.","code":""},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between vector and season lag representations — sl2acfbase","text":"acfbase2sl, matrix.   sl2acfbase sl2vecacf, array.","code":""},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert between vector and season lag representations — sl2acfbase","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/sl2acfbase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between vector and season lag representations — sl2acfbase","text":"","code":"## use a character matrix to illustrate the positions of the elements matsl <- rbind(paste0(\"Ra\", 0:3), paste0(\"Rb\", 0:3)) matsl #>      [,1]  [,2]  [,3]  [,4]  #> [1,] \"Ra0\" \"Ra1\" \"Ra2\" \"Ra3\" #> [2,] \"Rb0\" \"Rb1\" \"Rb2\" \"Rb3\" ## convert to what I consider \"standard\" vec format R(k)=EX_tX_{t-k}' sl2vecacf(matsl) #> , , 1 #>  #>      [,1]  [,2]  #> [1,] \"Ra0\" \"Rb1\" #> [2,] \"Rb1\" \"Rb0\" #>  #> , , 2 #>  #>      [,1]  [,2]  #> [1,] \"Ra2\" \"Ra1\" #> [2,] \"Rb3\" \"Rb2\" #>  #> , , 3 #>  #>      [,1] [,2]  #> [1,] NA   \"Ra3\" #> [2,] NA   NA    #>  ## convert to the format from acf() (R(k) is the transposed from mine). sl2acfbase(matsl) #> , , 1 #>  #>      [,1]  [,2]  #> [1,] \"Ra0\" \"Rb1\" #> [2,] \"Ra2\" \"Ra1\" #> [3,] NA    \"Ra3\" #>  #> , , 2 #>  #>      [,1]  [,2]  #> [1,] \"Rb1\" \"Rb0\" #> [2,] \"Rb3\" \"Rb2\" #> [3,] NA    NA    #>  identical(sl2vecacf(matsl), aperm(sl2acfbase(matsl), c(3, 2, 1))) # TRUE #> [1] TRUE  ## by default the conversion is lossles; ## so this contains all values from the original and some NA's: sl2acfbase(matsl) #> , , 1 #>  #>      [,1]  [,2]  #> [1,] \"Ra0\" \"Rb1\" #> [2,] \"Ra2\" \"Ra1\" #> [3,] NA    \"Ra3\" #>  #> , , 2 #>  #>      [,1]  [,2]  #> [1,] \"Rb1\" \"Rb0\" #> [2,] \"Rb3\" \"Rb2\" #> [3,] NA    NA    #>  ## the orignal, matsl, can be restored: acfbase2sl(sl2acfbase(matsl)) #>      [,1]  [,2]  [,3]  [,4]  #> [1,] \"Ra0\" \"Ra1\" \"Ra2\" \"Ra3\" #> [2,] \"Rb0\" \"Rb1\" \"Rb2\" \"Rb3\" identical(acfbase2sl(sl2acfbase(matsl)), matsl)  # TRUE #> [1] TRUE  ## this drops some values (if necessary) to keep complete block only sl2acfbase(matsl, fullblocks = TRUE) #> , , 1 #>  #>      [,1]  [,2]  #> [1,] \"Ra0\" \"Rb1\" #> [2,] \"Ra2\" \"Ra1\" #>  #> , , 2 #>  #>      [,1]  [,2]  #> [1,] \"Rb1\" \"Rb0\" #> [2,] \"Rb3\" \"Rb2\" #>"},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"slMatrix matrix-like object storing values   periodic autocovariance functions, .e. functions two   arguments periodic first argument,   r[t,k]=r[t+d,k]. first argument meaning \"time\"   \"season\" (taken modulo period),   second \"lag\".   class provides various access assignment methods   objects. slMatrix created storage values   periodic autocovariance functions used related quantities.","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"slMatrix\", m),   m matrix m[,k] giving values season   lag (k-1), \\(k=1,2,\\dots\\).   number rows m taken number   seasons. function slMatrix provides several ways specify   data slMatrix object.","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"m: Object class \"matrix\".","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"[<- signature(x = \"slMatrix\", = \"\", j = \"\", \tvalue = \"\"): ... [ signature(x = \"slMatrix\", = \"\", j = \"\", drop \t= \"\"): indexing method quite flexible allows extract parts       slMatrix objects variety ways. returns       ordinary matrix , drop = TRUE, vector. syntax indexing similar ordinary matrices       features specific periodic nature first       index. named parameters , j,       type. j can vectors.       interpretation j depends type. x[,j] (x[,j,type=\"sl\"]) refers value       season lag j.  referred standard       season-lag pair, meaning elements must       range 1,...,d, d number seasons lags       must non-negative. Negative indices usual effect       removing corresponding elements. zero element lag       admissible. x[,j,type=\"tl\"] similar \"sl\" allowed       take (integer) values. reduced modulo number       seasons 1,...,d, range. x[,j,type=\"tl+-\"] allows also lags       negative. x[,j,type=\"co\"] (\"co\" stands \"coefficient\")       assumes values negative lags lags larger       maxlag 0. assignment attempted lags,       message issued assignment ignored. x[,j,type=\"tt\"] arguments meaning       time. j scalars pair ,j       converted standard s,l pair value assigned       relevant element. /j vectors,       crossed procedure done pair. several values need assigned s,l pair       warning isssued values equal. Obviously, whereever negative arguments allowed, elements       omit specified negative indices. see [-methods.  maxLag signature(x = \"slMatrix\"):       maximum lag available storage.","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"current implementation indexing inefficient, simply   added features patches need arose. Maybe day   replace C code.","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/reference/slMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"m1 <- rbind(c(1, 0.81, 0), c(1, 0.4972376, 0.4972376)) x <- slMatrix(m1) x[1, 0] #> [1] 1 x[1:2, 0:1] #>       lag #> season 0         1 #>      1 1 0.8100000 #>      2 1 0.4972376 x[1:3, 1:3, type = \"tt\"] #>           [,1]      [,2] [,3] #> [1,] 1.0000000 0.4972376 0.00 #> [2,] 0.4972376 1.0000000 0.81 #> [3,] 0.0000000 0.8100000 1.00"},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create objects from class slMatrix — slMatrix","title":"Function to create objects from class slMatrix — slMatrix","text":"Provides flexible way create objects class   slMatrix. entries may specified several ways.","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create objects from class slMatrix — slMatrix","text":"","code":"slMatrix(init = NA, period, maxlag, seasonnames = seq(length = period),          lagnames = as.character(0:maxlag), periodunit = \"season\",          lagunit = \"lag\", f = NA, type = \"sl\")"},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create objects from class slMatrix — slMatrix","text":"init values autocovariances, see also argument f. period number seasons epoch maxlag maximum lag stored seasonnames names seasons (?) lagnames names lags periodunit name period unit lagunit name unit lags f function evaluate matrix get values  autocovariances. type format  arguments f, see details.","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create objects from class slMatrix — slMatrix","text":"internal representation slMatrix matrix slot, m, size   period x (maxlag+1). created call matrix()   init supplying values (may NAs).   init matrix values period maxlag   deduced (supplied) size. Change 21/06/2006: Now, length   init smaller m, remaining values   filled NA's (past  normal recycling rules   matrix() applied). previous behaviour used hide   puzzling difficult track errors. sure   change affect old code. f given used populate slot   m call fill.slMatrix. Normally case   init=NA required. Currently fill.slMatrix methods f class   \"matrix\" \"function\". arguments (indices)   can   controlled argument type. type=\"sl\" - standard season-lag pair type=\"tt\" - time-time pair type=\"tl\" - standard season-lag pair","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create objects from class slMatrix — slMatrix","text":"object class slMatrix","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create objects from class slMatrix — slMatrix","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/lagged/reference/slMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to create objects from class slMatrix — slMatrix","text":": additional work needed case dimensions   init result (see details section)","code":""},{"path":[]},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-0319000","dir":"Changelog","previous_headings":"","what":"lagged 0.3.1.9000","title":"lagged 0.3.1.9000","text":"Minor documentation tweaks.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-03-1-cran","dir":"Changelog","previous_headings":"","what":"lagged 0.3-1 (CRAN)","title":"lagged 0.3-1 (CRAN)","text":"CRAN release: 2021-12-05 made sure Lagged checks early argument inherits \"acf\". fixes errors R-devel checks lagged (R-devel 2021-12-03 earlier), since now .vector gives TRUE objects S3 class \"acf\", previously returned FALSE. removed travis settings. improved handling \"[[\" Lagged2d objects. Lagged2d objects, added “[” methods character .","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-03-0-cran","dir":"Changelog","previous_headings":"","what":"lagged 0.3-0 (CRAN)","title":"lagged 0.3-0 (CRAN)","text":"CRAN release: 2019-05-27 update vignette.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-02-2","dir":"Changelog","previous_headings":"","what":"lagged 0.2-2","title":"lagged 0.2-2","text":"added missing show() method Lagged2d objects. added [[ method slMatrix objects. new () method convert matrix slMatrix. initialisation method FlexibleLagged now matches argument data named, .e. explicitly supplied. puts line default initialisation methods , particular, makes easier initialise subclasses FlexibleLagged. set prototype, new(\"Lagged1d\"), data slot FlexibleLagged. default prototype giving invalid objects cases, e.g. new(\"FlexibleLagged\"). added \"maxLag<-\" method FlexibleLagged objects. “[[” “[” methods FlexibleLagged completely line Lagged classes (documentation) index length one. “Lagged2d” objects indexing two indices now defined works naturally matrix-like way: first index, , takes values 1:d, d number seasons second index, j, 0:maxlag. matrices, empty index designates whole range corresponding extent.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-02-1","dir":"Changelog","previous_headings":"","what":"lagged 0.2-1","title":"lagged 0.2-1","text":"CRAN release: 2019-04-05 Bug-fix: nSeasons() nSeasons<-()now exported. new functions sl2acfbase(), acfbase2sl() sl2vecacf() converting (multivariate) autocovariances returned stats::acf() season-lag representation. (functions formerly package pcts.) title vignette keywords wrong. added pkgdown site DESCRIPTION.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-02-0-cran","dir":"Changelog","previous_headings":"","what":"lagged 0.2-0 (CRAN)","title":"lagged 0.2-0 (CRAN)","text":"CRAN release: 2018-08-20 New generics nSeasons() nSeasons<-() (moved package sarima). New slMatrix function class (moved package pcts). Numerous changes documentation.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-01-2","dir":"Changelog","previous_headings":"","what":"lagged 0.1-2","title":"lagged 0.1-2","text":"Lagged classes now methods “Maths” group generic. Lagged classes now methods “Summary” group generic. Lagged classes now methods “Ops” unary operators (binary Ops already available). New vignette Guide_lagged (first draft). New function maxLag<-() methods Lagged objects.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-01-1-cran","dir":"Changelog","previous_headings":"","what":"lagged 0.1-1 (CRAN)","title":"lagged 0.1-1 (CRAN)","text":"CRAN release: 2017-10-15 New function dataWithLagNames(), mainly programming.","code":""},{"path":"https://geobosh.github.io/lagged/news/index.html","id":"lagged-01-0-cran","dir":"Changelog","previous_headings":"","what":"lagged 0.1-0 (CRAN)","title":"lagged 0.1-0 (CRAN)","text":"CRAN release: 2017-05-21 First CRAN version (taken package sarima).","code":""}]
